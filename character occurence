Problem Statement:
You are given a string, the length of the string, and a character. Your task is to determine how many times the given character occurs in the string.
Write a function that returns an integer representing the number of times the specified character appears in the string.
Input:
input1: A string s of length n (1 ≤ n ≤ 10^5).
input2: An integer n, representing the length of the string s.
input3: A single character c that needs to be counted in the string.
Output:
Return an integer representing the number of occurrences of the character c in the string s.
Constraints:
The length of the string n is between 1 and 100,000.
The string will only contain lowercase English letters.
The character c is guaranteed to be a lowercase English letter.
The value of n will always match the actual length of the string. If not, return an appropriate error message.

Input:
input1: "helloworld"       .
input2: 10
input3: "l"

Output:
3

#include <stdio.h>
#include <string.h>

int count_occurrences(char string[], int length, char char_to_find) {
    if (strlen(string) != length) return -1;  // Check length mismatch
    int count = 0;
    for (int i = 0; i < length; i++)
        if (string[i] == char_to_find) count++;
    return count;
}

int main() {
    char input1[] = "helloworld";
    int input2 = 10;
    char input3 = 'l';
    
    int output = count_occurrences(input1, input2, input3);
    if (output != -1) printf("Output: %d\n", output);  // Print occurrences
    
    return 0;
}

